import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

public class CryptoSimetrica {

    // MÃ©todo para gerar uma chave AES de 128 bits
    public static SecretKey gerarChaveAES() throws Exception {
        KeyGenerator keyGen = KeyGenerator.getInstance("AES");
        keyGen.init(128);
        return keyGen.generateKey();
    }
    public static String criptografar(String texto, SecretKey chave) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.ENCRYPT_MODE, chave);
        byte[] textoCriptografado = cipher.doFinal(texto.getBytes());
        return Base64.getEncoder().encodeToString(textoCriptografado);
    }
    public static String descriptografar(String textoCriptografado, SecretKey chave) throws Exception {
        Cipher cipher = Cipher.getInstance("AES");
        cipher.init(Cipher.DECRYPT_MODE, chave);
        byte[] textoBytes = Base64.getDecoder().decode(textoCriptografado);
        byte[] textoOriginal = cipher.doFinal(textoBytes);
        return new String(textoOriginal);
    }

    public static void main(String[] args) throws Exception {
        SecretKey chave = gerarChaveAES();

        String mensagem = "Mensagem secreta";
        System.out.println("Original: " + mensagem);

        String criptografada = criptografar(mensagem, chave);
        System.out.println("Criptografada: " + criptografada);

        String descriptografada = descriptografar(criptografada, chave);
        System.out.println("Descriptografada: " + descriptografada);
    }
}
